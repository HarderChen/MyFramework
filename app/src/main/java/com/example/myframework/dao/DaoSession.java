package com.example.myframework.dao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.example.myframework.dao.AuthUser;
import com.example.myframework.dao.TraceUser;
import com.example.myframework.dao.BookMarkUser;
import com.example.myframework.dao.LocalUser;

import com.example.myframework.dao.AuthUserDao;
import com.example.myframework.dao.TraceUserDao;
import com.example.myframework.dao.BookMarkUserDao;
import com.example.myframework.dao.LocalUserDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig authUserDaoConfig;
    private final DaoConfig traceUserDaoConfig;
    private final DaoConfig bookMarkUserDaoConfig;
    private final DaoConfig localUserDaoConfig;

    private final AuthUserDao authUserDao;
    private final TraceUserDao traceUserDao;
    private final BookMarkUserDao bookMarkUserDao;
    private final LocalUserDao localUserDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        authUserDaoConfig = daoConfigMap.get(AuthUserDao.class).clone();
        authUserDaoConfig.initIdentityScope(type);

        traceUserDaoConfig = daoConfigMap.get(TraceUserDao.class).clone();
        traceUserDaoConfig.initIdentityScope(type);

        bookMarkUserDaoConfig = daoConfigMap.get(BookMarkUserDao.class).clone();
        bookMarkUserDaoConfig.initIdentityScope(type);

        localUserDaoConfig = daoConfigMap.get(LocalUserDao.class).clone();
        localUserDaoConfig.initIdentityScope(type);

        authUserDao = new AuthUserDao(authUserDaoConfig, this);
        traceUserDao = new TraceUserDao(traceUserDaoConfig, this);
        bookMarkUserDao = new BookMarkUserDao(bookMarkUserDaoConfig, this);
        localUserDao = new LocalUserDao(localUserDaoConfig, this);

        registerDao(AuthUser.class, authUserDao);
        registerDao(TraceUser.class, traceUserDao);
        registerDao(BookMarkUser.class, bookMarkUserDao);
        registerDao(LocalUser.class, localUserDao);
    }
    
    public void clear() {
        authUserDaoConfig.clearIdentityScope();
        traceUserDaoConfig.clearIdentityScope();
        bookMarkUserDaoConfig.clearIdentityScope();
        localUserDaoConfig.clearIdentityScope();
    }

    public AuthUserDao getAuthUserDao() {
        return authUserDao;
    }

    public TraceUserDao getTraceUserDao() {
        return traceUserDao;
    }

    public BookMarkUserDao getBookMarkUserDao() {
        return bookMarkUserDao;
    }

    public LocalUserDao getLocalUserDao() {
        return localUserDao;
    }

}
